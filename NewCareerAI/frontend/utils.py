"""
utils.py - ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Streamlit App
"""

import streamlit as st
import os
import tempfile
from datetime import datetime

def show_system_info():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö"""
    st.sidebar.header("üíæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏∞‡∏ö‡∏ö")
    
    import platform
    import pygame
    
    system_info = f"""
    **‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£:** {platform.system()} {platform.release()}
    **Python:** {platform.python_version()}
    **Pygame:** {pygame.version.ver}
    **‡πÄ‡∏ß‡∏•‡∏≤:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
    """
    
    st.sidebar.markdown(system_info)

def create_temp_audio_dir():
    """‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå temporary ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á"""
    temp_dir = os.path.join(tempfile.gettempdir(), "newcareerai_audio")
    os.makedirs(temp_dir, exist_ok=True)
    return temp_dir

def cleanup_audio_files(directory):
    """‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÉ‡∏ô directory"""
    try:
        for filename in os.listdir(directory):
            if filename.endswith(('.wav', '.mp3')):
                file_path = os.path.join(directory, filename)
                os.remove(file_path)
        return True
    except Exception as e:
        st.error(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏î‡πâ: {e}")
        return False

def display_progress_bar(current, total):
    """‡πÅ‡∏™‡∏î‡∏á progress bar ‡πÅ‡∏ö‡∏ö‡∏™‡∏ß‡∏¢"""
    progress = current / total if total > 0 else 0
    
    col1, col2, col3 = st.columns([3, 1, 1])
    
    with col1:
        st.progress(progress)
    with col2:
        st.write(f"{current}/{total}")
    with col3:
        st.write(f"{progress*100:.0f}%")

def show_audio_controls():
    """‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á"""
    st.sidebar.header("üéµ ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á")
    
    # ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á (placeholder - pygame ‡πÑ‡∏°‡πà‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á)
    volume = st.sidebar.slider("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á", 0, 100, 80, help="‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á (‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ö‡∏≤‡∏á‡∏£‡∏∞‡∏ö‡∏ö)")
    
    # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á TTS
    voice_options = {
        "th-TH-Chirp3-HD-Erinome": "Erinome (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)",
        "th-TH-Chirp3-HD-Sulafat": "Sulafat",
        "th-TH-Chirp3-HD-Schedar": "Schedar"
    }
    
    selected_voice = st.sidebar.selectbox(
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á TTS:",
        options=list(voice_options.keys()),
        format_func=lambda x: voice_options[x],
        help="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°"
    )
    
    return volume, selected_voice

def format_time_duration(seconds):
    """‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö MM:SS"""
    minutes = int(seconds // 60)
    seconds = int(seconds % 60)
    return f"{minutes:02d}:{seconds:02d}"

def validate_jd_input(jd_text):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á Job Description"""
    errors = []
    
    if not jd_text.strip():
        errors.append("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Job Description")
    elif len(jd_text.strip()) < 50:
        errors.append("Job Description ‡∏™‡∏±‡πâ‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 50 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)")
    elif len(jd_text.strip()) > 5000:
        errors.append("Job Description ‡∏¢‡∏≤‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ (‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)")
    
    return errors

def show_tips():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"""
    with st.expander("üí° ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô"):
        st.markdown("""
        ### üìã ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° Job Description:
        - ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô: ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏á‡∏≤‡∏ô, ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏î‡∏ä‡∏≠‡∏ö, ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô, ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡∏Å‡∏≤‡∏£
        - ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 200-1000 ‡∏Ñ‡∏≥
        
        ### üé§ ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÇ‡∏ü‡∏ô:
        - ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏°‡πÇ‡∏Ñ‡∏£‡πÇ‡∏ü‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏±‡∏°‡∏†‡∏≤‡∏©‡∏ì‡πå
        - ‡∏û‡∏π‡∏î‡πÉ‡∏´‡πâ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ
        - ‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏à‡∏≤‡∏Å‡∏™‡∏¥‡πà‡∏á‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
        
        ### üîä ‡∏Å‡∏≤‡∏£‡∏ü‡∏±‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:
        - ‡∏Ñ‡∏•‡∏¥‡∏Å "‡∏ü‡∏±‡∏á‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ AI ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°
        - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ü‡∏±‡∏á‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô
        
        ### üí¨ ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°:
        - ‡∏Ñ‡∏¥‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏ï‡∏≠‡∏ö ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
        - ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏î‡πá‡∏ô
        - ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏≠‡πÉ‡∏à‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏î‡πâ
        
        ### üìä ‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:
        - ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô‡∏î‡∏π‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•
        - AI ‡∏à‡∏∞‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏ß‡πâ‡∏ó‡∏ö‡∏ó‡∏ß‡∏ô‡πÑ‡∏î‡πâ
        """)

def export_interview_results(questions, answers, summary=""):
    """‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏°‡∏†‡∏≤‡∏©‡∏ì‡πå‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå text"""
    content = []
    content.append("=" * 60)
    content.append("üìã ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡∏°‡∏†‡∏≤‡∏©‡∏ì‡πå‡∏á‡∏≤‡∏ô - AI Coach for Interview")
    content.append("=" * 60)
    content.append(f"üìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    content.append("")
    
    content.append("‚ùì ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö:")
    content.append("-" * 40)
    
    for i, (q, a) in enumerate(zip(questions, answers), 1):
        content.append(f"\n{i}. {q}")
        content.append(f"   üí¨ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö: {a}")
    
    if summary:
        content.append("\n" + "=" * 60)
        content.append("üìä ‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡πÇ‡∏î‡∏¢ AI:")
        content.append("=" * 60)
        content.append(summary)
    
    content.append("\n" + "=" * 60)
    content.append("üé§ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ AI Coach for Interview")
    content.append("=" * 60)
    
    return "\n".join(content)
