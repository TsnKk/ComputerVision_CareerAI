"""
config.py - Configuration Settings for NewCareerAI
‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö NewCareerAI
"""
import os

# === API Configuration ===
GOOGLE_CREDENTIALS_PATH = os.environ.get(
    "GOOGLE_APPLICATION_CREDENTIALS", 
    "careerai-469309-9946c52b3f8e.json"
)

GEMINI_API_KEY = os.environ.get("GEMINI_API_KEY")

# === Audio Configuration ===
AUDIO_CONFIG = {
    "sample_rate": 16000,
    "chunk_size": 1024,
    "silence_threshold": 500,
    "silence_duration": 3,  # ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏á‡∏µ‡∏¢‡∏ö
    "min_recording_duration": 1  # ‡∏≠‡∏±‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥
}

# === TTS Configuration ===
TTS_CONFIG = {
    "language_code": "th-TH",
    "voice_name": "th-TH-Chirp3-HD-Erinome",  # ‡πÄ‡∏™‡∏µ‡∏¢‡∏á Premium
    "audio_encoding": "LINEAR16",
    "sample_rate": 16000
}

# === Whisper Configuration ===
WHISPER_CONFIG = {
    "model_size": "base",  # tiny, base, small, medium, large
    "language": "th"
}

# === Interview Configuration ===
INTERVIEW_CONFIG = {
    "max_questions": 5,
    "question_timeout": 30,  # timeout ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° (‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
    "gemini_model": "gemini-2.0-flash"
}

# === File Paths ===
AUDIO_DIR = "audio_files"
TEMP_DIR = "temp"

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
os.makedirs(AUDIO_DIR, exist_ok=True)
os.makedirs(TEMP_DIR, exist_ok=True)

# === Validation Functions ===
def validate_config():
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"""
    errors = []
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Google Credentials
    if not os.path.exists(GOOGLE_CREDENTIALS_PATH):
        errors.append(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå Google Credentials: {GOOGLE_CREDENTIALS_PATH}")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Gemini API Key
    if not GEMINI_API_KEY:
        errors.append("‡πÑ‡∏°‡πà‡∏û‡∏ö GEMINI_API_KEY environment variable")
    
    return errors

def print_config_status():
    """‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"""
    print("=== ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö NewCareerAI ===")
    print(f"üîë Google Credentials: {GOOGLE_CREDENTIALS_PATH}")
    print(f"   {'‚úÖ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå' if os.path.exists(GOOGLE_CREDENTIALS_PATH) else '‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå'}")
    print(f"ü§ñ Gemini API Key: {'‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß' if GEMINI_API_KEY else '‚ùå ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤'}")
    print(f"üé§ Audio Sample Rate: {AUDIO_CONFIG['sample_rate']} Hz")
    print(f"üîä TTS Voice: {TTS_CONFIG['voice_name']}")
    print(f"üß† Whisper Model: {WHISPER_CONFIG['model_size']}")
    print(f"‚ùì Max Questions: {INTERVIEW_CONFIG['max_questions']}")
    print("=" * 40)

if __name__ == "__main__":
    print_config_status()
    errors = validate_config()
    if errors:
        print("‚ùå ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤:")
        for error in errors:
            print(f"  - {error}")
    else:
        print("‚úÖ ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
