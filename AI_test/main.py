import speech_recognition as sr
import ollama
import subprocess

CHARACTER_PROMPT = """
‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≠‡∏¢‡∏™‡∏±‡∏°‡∏†‡∏≤‡∏©‡∏ì‡πå‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó IT 
"""

speech_rate = 200  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß‡πÄ‡∏™‡∏µ‡∏¢‡∏á macOS say

def get_ai_response(user_input):
    response = ollama.chat(
        model="llama3",
        messages=[
            {"role": "system", "content": CHARACTER_PROMPT},
            {"role": "user", "content": user_input},
        ]
    )
    return response["message"]["content"]

def listen_and_transcribe():
    r = sr.Recognizer()
    r.pause_threshold = 1.5   # ‡∏£‡∏≠ 4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏•‡∏±‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏¢‡∏∏‡∏î‡∏û‡∏π‡∏î
    r.energy_threshold = 300  # ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°

    try:
        with sr.Microphone() as source:
            r.adjust_for_ambient_noise(source, duration=0.5)
            print("üé§ ‡∏û‡∏π‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢...")
            audio = r.listen(source, timeout=None, phrase_time_limit=None)
            text = r.recognize_google(audio, language="th-TH")
            print(f"üìù ‡∏Ñ‡∏∏‡∏ì‡∏û‡∏π‡∏î‡∏ß‡πà‡∏≤: {text}")
            return text
    except sr.UnknownValueError:
        print("‚ùå ‡∏ü‡∏±‡∏á‡πÑ‡∏°‡πà‡∏£‡∏π‡πâ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö")
    except sr.RequestError as e:
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á: {e}")
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÑ‡∏°‡∏Ñ‡πå: {e}")
    return None

def speak(text):
    subprocess.call(['say', '-v', 'Kanya', '-r', str(speech_rate), text])

if __name__ == "__main__":
    print("ü§ñ ‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡∏û‡∏π‡∏î‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á '‡∏´‡∏¢‡∏∏‡∏î' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")
    while True:
        user_input = listen_and_transcribe()

        if not user_input:
            continue

        if user_input.lower() in ["‡∏´‡∏¢‡∏∏‡∏î", "‡∏û‡∏≠‡πÅ‡∏•‡πâ‡∏ß", "exit", "stop"]:
            print("üëã ‡∏ö‡πä‡∏≤‡∏¢‡∏ö‡∏≤‡∏¢")
            speak("‡∏ö‡πä‡∏≤‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡∏ö")
            break

        response = get_ai_response(user_input)
        print(f"ü§ñ Luna: {response}")
        speak(response)